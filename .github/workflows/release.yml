name: Release

on:
  push:
    branches: [ main ]
    tags: '*.*.*'
    paths:
      - 'package.json'
      - 'src/**'
      - 'rollup.config.mjs'
      - '.github/workflows/release.yml'
  workflow_dispatch:


# Ensure we don't run multiple release workflows at the same time
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    uses: ./.github/workflows/test.yml  # use the callable tests job to run tests

  # Then build and release
  build-and-release:
    needs: [tests]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build userscript (debug and release versions)
        run: |
          yarn clean
          yarn build:debug
          yarn build:release

      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check-release
        run: |
          if gh release view v${{ steps.package-version.outputs.version }} &>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Using GitHub's automatically generated release notes instead of custom changelog generation

      - name: Create new release
        if: steps.check-release.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.package-version.outputs.version }}
          tag_name: v${{ steps.package-version.outputs.version }}
          generate_release_notes: true
          files: |
            dist/llmop.user.js
            dist/llmop.debug.user.js
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update existing release
        if: steps.check-release.outputs.exists == 'true'
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.package-version.outputs.version }}
          tag_name: v${{ steps.package-version.outputs.version }}
          generate_release_notes: true
          files: |
            dist/llmop.user.js
            dist/llmop.debug.user.js
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
